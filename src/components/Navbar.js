import axios from "axios";
import { NavLink, useNavigate } from "react-router-dom";
import { useContext, useState } from "react";
import { AuthContext } from "../context/AuthContext";
import { ThemeContext } from '../context/ThemeContext';
import logo from '../img/logo.svg'
import logoDark from '../img/logo-dark.svg'

const Navbar = () => {
    const { colorTheme, setTheme } = useContext(ThemeContext);
    const { error, dispatch } = useContext(AuthContext);

    const menuItems = [
        {
            key: 'menuItem1', name: 'apps', link: '/apps', viewBox: '0 0 18 18', path: (
                <path
                    d="M7.33335 9.83329H1.50002C1.27901 9.83329 1.06704 9.92109 0.910765 10.0774C0.754484 10.2337 0.666687 10.4456 0.666687 10.6666V16.5C0.666687 16.721 0.754484 16.9329 0.910765 17.0892C1.06704 17.2455 1.27901 17.3333 1.50002 17.3333H7.33335C7.55437 17.3333 7.76633 17.2455 7.92261 17.0892C8.07889 16.9329 8.16669 16.721 8.16669 16.5V10.6666C8.16669 10.4456 8.07889 10.2337 7.92261 10.0774C7.76633 9.92109 7.55437 9.83329 7.33335 9.83329ZM6.50002 15.6666H2.33335V11.5H6.50002V15.6666ZM16.5 0.666626H10.6667C10.4457 0.666626 10.2337 0.754423 10.0774 0.910704C9.92115 1.06698 9.83335 1.27895 9.83335 1.49996V7.33329C9.83335 7.55431 9.92115 7.76627 10.0774 7.92255C10.2337 8.07883 10.4457 8.16663 10.6667 8.16663H16.5C16.721 8.16663 16.933 8.07883 17.0893 7.92255C17.2456 7.76627 17.3334 7.55431 17.3334 7.33329V1.49996C17.3334 1.27895 17.2456 1.06698 17.0893 0.910704C16.933 0.754423 16.721 0.666626 16.5 0.666626ZM15.6667 6.49996H11.5V2.33329H15.6667V6.49996ZM16.5 9.83329H10.6667C10.4457 9.83329 10.2337 9.92109 10.0774 10.0774C9.92115 10.2337 9.83335 10.4456 9.83335 10.6666V16.5C9.83335 16.721 9.92115 16.9329 10.0774 17.0892C10.2337 17.2455 10.4457 17.3333 10.6667 17.3333H16.5C16.721 17.3333 16.933 17.2455 17.0893 17.0892C17.2456 16.9329 17.3334 16.721 17.3334 16.5V10.6666C17.3334 10.4456 17.2456 10.2337 17.0893 10.0774C16.933 9.92109 16.721 9.83329 16.5 9.83329ZM15.6667 15.6666H11.5V11.5H15.6667V15.6666ZM7.33335 0.666626H1.50002C1.27901 0.666626 1.06704 0.754423 0.910765 0.910704C0.754484 1.06698 0.666687 1.27895 0.666687 1.49996V7.33329C0.666687 7.55431 0.754484 7.76627 0.910765 7.92255C1.06704 8.07883 1.27901 8.16663 1.50002 8.16663H7.33335C7.55437 8.16663 7.76633 8.07883 7.92261 7.92255C8.07889 7.76627 8.16669 7.55431 8.16669 7.33329V1.49996C8.16669 1.27895 8.07889 1.06698 7.92261 0.910704C7.76633 0.754423 7.55437 0.666626 7.33335 0.666626ZM6.50002 6.49996H2.33335V2.33329H6.50002V6.49996Z"
                    fill="currentColor"></path>
            )
        },
        {
            key: 'menuItem2', name: 'notes', link: '/notes', viewBox: '0 0 14 18', path: (
                <path
                    d="M13.6665 6.44996C13.6578 6.3734 13.6411 6.29799 13.6165 6.22496V6.14996C13.5765 6.06428 13.523 5.98551 13.4582 5.91663L8.45819 0.916626C8.3893 0.851806 8.31054 0.79836 8.22486 0.758293H8.14986C8.0652 0.709744 7.97171 0.678579 7.87486 0.666626H2.83319C2.17015 0.666626 1.53426 0.930018 1.06542 1.39886C0.596583 1.8677 0.333191 2.50358 0.333191 3.16663V14.8333C0.333191 15.4963 0.596583 16.1322 1.06542 16.6011C1.53426 17.0699 2.17015 17.3333 2.83319 17.3333H11.1665C11.8296 17.3333 12.4654 17.0699 12.9343 16.6011C13.4031 16.1322 13.6665 15.4963 13.6665 14.8333V6.49996C13.6665 6.49996 13.6665 6.49996 13.6665 6.44996ZM8.66652 3.50829L10.8249 5.66663H9.49986C9.27884 5.66663 9.06688 5.57883 8.9106 5.42255C8.75432 5.26627 8.66652 5.05431 8.66652 4.83329V3.50829ZM11.9999 14.8333C11.9999 15.0543 11.9121 15.2663 11.7558 15.4225C11.5995 15.5788 11.3875 15.6666 11.1665 15.6666H2.83319C2.61218 15.6666 2.40022 15.5788 2.24394 15.4225C2.08765 15.2663 1.99986 15.0543 1.99986 14.8333V3.16663C1.99986 2.94561 2.08765 2.73365 2.24394 2.57737C2.40022 2.42109 2.61218 2.33329 2.83319 2.33329H6.99986V4.83329C6.99986 5.49633 7.26325 6.13222 7.73209 6.60106C8.20093 7.0699 8.83681 7.33329 9.49986 7.33329H11.9999V14.8333Z"
                    fill="currentColor"></path>
            )
        },
        {
            key: 'menuItem3', name: 'websites', link: '/webs', viewBox: '0 0 18 18', path: (
                <path
                    d="M9.00014 0.666626C4.41681 0.666626 0.666809 4.41663 0.666809 8.99996C0.666809 13.5833 4.41681 17.3333 9.00014 17.3333C13.5835 17.3333 17.3335 13.5833 17.3335 8.99996C17.3335 4.41663 13.5835 0.666626 9.00014 0.666626ZM2.58348 10.6666C2.41681 10.0833 2.33348 9.58329 2.33348 8.99996C2.33348 8.41663 2.41681 7.91663 2.58348 7.33329H4.16681C4.00014 8.41663 4.00014 9.58329 4.16681 10.6666H2.58348ZM3.25014 12.3333H4.41681C4.58348 13.0833 4.83348 13.8333 5.25014 14.5C4.41681 13.9166 3.75014 13.1666 3.25014 12.3333ZM4.41681 5.66663H3.25014C3.75014 4.83329 4.41681 4.08329 5.25014 3.49996C4.83348 4.16663 4.58348 4.91663 4.41681 5.66663ZM8.16681 15.4166C7.16681 14.6666 6.41681 13.5833 6.16681 12.3333H8.16681V15.4166ZM8.16681 10.6666H5.75014C5.66681 10.0833 5.66681 9.58329 5.66681 8.99996C5.66681 8.41663 5.66681 7.91663 5.75014 7.33329H8.16681V10.6666ZM8.16681 5.66663H6.16681C6.41681 4.41663 7.16681 3.33329 8.16681 2.58329V5.66663ZM14.7501 5.66663H13.5835C13.4168 4.91663 13.1668 4.16663 12.7501 3.49996C13.5835 4.08329 14.2501 4.83329 14.7501 5.66663ZM9.83348 2.58329C10.8335 3.33329 11.5835 4.41663 11.8335 5.66663H9.83348V2.58329ZM9.83348 15.4166V12.3333H11.8335C11.5835 13.5833 10.8335 14.6666 9.83348 15.4166ZM12.2501 10.6666H9.83348V7.33329H12.2501C12.3335 8.41663 12.3335 9.58329 12.2501 10.6666ZM12.8335 14.5C13.1668 13.8333 13.4168 13.0833 13.6668 12.3333H14.8335C14.2501 13.1666 13.5835 13.9166 12.8335 14.5ZM13.9168 10.6666C14.0835 9.58329 14.0835 8.41663 13.9168 7.33329H15.5001C15.8335 8.41663 15.8335 9.58329 15.5001 10.6666H13.9168Z"
                    fill="currentColor"></path>
            )
        },
        {
            key: 'menuItem4', name: 'development', link: '/devs', viewBox: '0 0 18 18', path: (
                <path
                    d="M16.7666 6.9583L15.1916 6.4333L15.9332 4.94996C16.0084 4.7947 16.0336 4.61993 16.0052 4.44977C15.9768 4.27961 15.8964 4.12245 15.7749 3.99996L13.9999 2.22496C13.8768 2.1017 13.7181 2.02013 13.5462 1.99173C13.3743 1.96333 13.1978 1.98953 13.0416 2.06663L11.5582 2.8083L11.0332 1.2333C10.9778 1.06912 10.8725 0.926317 10.7321 0.824752C10.5917 0.723187 10.4232 0.667916 10.2499 0.666629H7.7499C7.5752 0.666178 7.40477 0.720645 7.26271 0.82233C7.12065 0.924016 7.01414 1.06778 6.95823 1.2333L6.43323 2.8083L4.9499 2.06663C4.79464 1.99145 4.61987 1.9663 4.44971 1.99466C4.27955 2.02302 4.12239 2.10349 3.9999 2.22496L2.2249 3.99996C2.10164 4.1231 2.02007 4.28177 1.99167 4.45368C1.96327 4.62558 1.98946 4.80205 2.06657 4.9583L2.80823 6.44163L1.23323 6.96663C1.06906 7.02208 0.926256 7.12732 0.824691 7.26772C0.723126 7.40812 0.667855 7.57668 0.666568 7.74996V10.25C0.666117 10.4247 0.720584 10.5951 0.822269 10.7372C0.923955 10.8792 1.06772 10.9857 1.23323 11.0416L2.80823 11.5666L2.06657 13.05C1.99138 13.2052 1.96624 13.38 1.9946 13.5502C2.02296 13.7203 2.10343 13.8775 2.2249 14L3.9999 15.775C4.12304 15.8982 4.28171 15.9798 4.45361 16.0082C4.62551 16.0366 4.80199 16.0104 4.95823 15.9333L6.44157 15.1916L6.96657 16.7666C7.02247 16.9321 7.12898 17.0759 7.27104 17.1776C7.41311 17.2793 7.58353 17.3337 7.75823 17.3333H10.2582C10.4329 17.3337 10.6034 17.2793 10.7454 17.1776C10.8875 17.0759 10.994 16.9321 11.0499 16.7666L11.5749 15.1916L13.0582 15.9333C13.2125 16.0066 13.3856 16.0307 13.554 16.0024C13.7224 15.9741 13.8781 15.8947 13.9999 15.775L15.7749 14C15.8982 13.8768 15.9797 13.7182 16.0081 13.5463C16.0365 13.3743 16.0103 13.1979 15.9332 13.0416L15.1916 11.5583L16.7666 11.0333C16.9307 10.9778 17.0735 10.8726 17.1751 10.7322C17.2767 10.5918 17.3319 10.4232 17.3332 10.25V7.74996C17.3337 7.57526 17.2792 7.40483 17.1775 7.26277C17.0758 7.12071 16.9321 7.0142 16.7666 6.9583ZM15.6666 9.64996L14.6666 9.9833C14.4366 10.0579 14.2256 10.1816 14.0483 10.3459C13.8709 10.5102 13.7314 10.711 13.6395 10.9346C13.5475 11.1582 13.5053 11.3991 13.5157 11.6406C13.5261 11.8821 13.589 12.1185 13.6999 12.3333L14.1749 13.2833L13.2582 14.2L12.3332 13.7C12.1195 13.5935 11.8854 13.5342 11.6468 13.526C11.4082 13.5179 11.1706 13.5611 10.9502 13.6528C10.7297 13.7445 10.5315 13.8824 10.369 14.0573C10.2065 14.2322 10.0835 14.44 10.0082 14.6666L9.6749 15.6666H8.3499L8.01657 14.6666C7.94198 14.4367 7.81826 14.2257 7.65398 14.0483C7.48971 13.871 7.28882 13.7315 7.06525 13.6395C6.84168 13.5475 6.60078 13.5053 6.35925 13.5158C6.11773 13.5262 5.88137 13.5891 5.66657 13.7L4.71657 14.175L3.7999 13.2583L4.2999 12.3333C4.41081 12.1185 4.47367 11.8821 4.48411 11.6406C4.49454 11.3991 4.45232 11.1582 4.36035 10.9346C4.26838 10.711 4.12888 10.5102 3.95152 10.3459C3.77416 10.1816 3.56319 10.0579 3.33323 9.9833L2.33323 9.64996V8.34996L3.33323 8.01663C3.56319 7.94204 3.77416 7.81832 3.95152 7.65404C4.12888 7.48977 4.26838 7.28888 4.36035 7.06531C4.45232 6.84174 4.49454 6.60084 4.48411 6.35932C4.47367 6.11779 4.41081 5.88143 4.2999 5.66663L3.8249 4.74163L4.74157 3.82496L5.66657 4.29996C5.88137 4.41087 6.11773 4.47373 6.35925 4.48417C6.60078 4.49461 6.84168 4.45238 7.06525 4.36041C7.28882 4.26845 7.48971 4.12894 7.65398 3.95158C7.81826 3.77422 7.94198 3.56325 8.01657 3.3333L8.3499 2.3333H9.6499L9.98323 3.3333C10.0578 3.56325 10.1815 3.77422 10.3458 3.95158C10.5101 4.12894 10.711 4.26845 10.9346 4.36041C11.1581 4.45238 11.399 4.49461 11.6405 4.48417C11.8821 4.47373 12.1184 4.41087 12.3332 4.29996L13.2832 3.82496L14.1999 4.74163L13.6999 5.66663C13.5934 5.88033 13.5341 6.11442 13.526 6.35304C13.5178 6.59165 13.5611 6.82924 13.6527 7.0497C13.7444 7.27016 13.8823 7.46835 14.0573 7.63086C14.2322 7.79337 14.44 7.9164 14.6666 7.99163L15.6666 8.32496V9.64996ZM8.9999 5.66663C8.34063 5.66663 7.69616 5.86213 7.148 6.2284C6.59984 6.59467 6.17259 7.11526 5.9203 7.72435C5.66801 8.33344 5.602 9.00366 5.73062 9.65026C5.85923 10.2969 6.1767 10.8908 6.64288 11.357C7.10905 11.8232 7.703 12.1406 8.3496 12.2692C8.9962 12.3979 9.66643 12.3319 10.2755 12.0796C10.8846 11.8273 11.4052 11.4 11.7715 10.8519C12.1377 10.3037 12.3332 9.65923 12.3332 8.99996C12.3332 8.11591 11.982 7.26806 11.3569 6.64294C10.7318 6.01782 9.88396 5.66663 8.9999 5.66663ZM8.9999 10.6666C8.67027 10.6666 8.34803 10.5689 8.07395 10.3857C7.79987 10.2026 7.58625 9.94231 7.4601 9.63777C7.33396 9.33322 7.30095 8.99811 7.36526 8.67481C7.42957 8.35151 7.5883 8.05454 7.82139 7.82145C8.05448 7.58836 8.35145 7.42963 8.67475 7.36532C8.99805 7.30101 9.33316 7.33402 9.63771 7.46016C9.94225 7.58631 10.2025 7.79993 10.3857 8.07401C10.5688 8.34809 10.6666 8.67033 10.6666 8.99996C10.6666 9.44199 10.491 9.86591 10.1784 10.1785C9.86585 10.491 9.44193 10.6666 8.9999 10.6666Z"
                    fill="currentColor"></path>
            )
        },
    ]

    // Current Link Style
    const nav_link_style = {
        active: "flex items-center pl-3 py-3 pr-4 rounded text-white dark:text-gray-50 bg-indigo-500 rounded",
        inactive: "flex items-center pl-3 py-3 pr-4 text-gray-500 dark:text-gray-50 hover:bg-indigo-50 dark:hover:bg-gray-900 rounded"
    }
    const svg_link_style = {
        active: "text-white dark:text-indigo-100 w-5 h-5",
        inactive: "text-gray-200 dark:text-gray-600 w-5 h-5"
    }

    // Burger menus
    const [menu, setMenu] = useState('hidden')
    const toggleMenu = () => {
        setMenu(() => (menu === 'hidden') ? '' : 'hidden')
    };

    // Logout
    const navigate = useNavigate()
    const handleClick = async (e) => {
        e.preventDefault();
        try {
            await axios.get(`${process.env.REACT_APP_API}/auth/logout`)
            dispatch({ type: "LOGOUT" });
            navigate("/")
        } catch (err) {
            console.log(error)
        }
    };

    return (
        <div className="navbar transition duration-500">
            <nav className="lg:hidden py-6 px-6 light:border-b dark:bg-gray-800">
                <div className="flex items-center justify-between">
                    <NavLink to="/">
                        <img className="h-10" src={(colorTheme === 'dark') ? logoDark : logo} alt="logo" width="auto" />
                    </NavLink>
                    <button onClick={toggleMenu} className="navbar-burger flex items-center rounded focus:outline-none">
                        <svg className="text-white bg-indigo-500 hover:bg-indigo-600 block h-8 w-8 p-2 rounded"
                            viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" fill="currentColor">
                            <title>Mobile menu</title>
                            <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
                        </svg>
                    </button>
                </div>
            </nav>
            <div className={`lg:block navbar-menu relative z-50 ${menu}`}>
                <div className="navbar-backdrop fixed lg:hidden inset-0 bg-gray-800 opacity-10" onClick={toggleMenu}></div>
                <nav className="fixed top-0 left-0 bottom-0 flex flex-col w-3/4 lg:w-60 sm:max-w-xs pt-6 pb-8 bg-white dark:bg-gray-800 light:border-r overflow-y-auto">
                    <div className="flex w-full items-center px-6 pb-6 mb-6 lg:border-b border-blue-50 dark:border-gray-700">
                        <NavLink to="/" className="text-xl dark:text-white font-semibold">
                            <img className="h-8" src={(colorTheme === 'dark') ? logoDark : logo} alt="logo" width="auto" />
                        </NavLink>
                    </div>
                    <div className="px-4 pb-6">
                        <ul className="mb-8 text-sm font-medium">
                            <li>
                                <NavLink to="/" className={({ isActive }) => isActive ? nav_link_style['active'] : nav_link_style['inactive']} children={({ isActive }) => (
                                    <>
                                        <span className="inline-block mr-3">
                                            <svg className={isActive ? svg_link_style['active'] : svg_link_style['inactive']} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path
                                                    d="M14.9066 3.12873C14.9005 3.12223 14.8987 3.11358 14.8923 3.10722C14.8859 3.10086 14.8771 3.09893 14.8706 3.09278C13.3119 1.53907 11.2008 0.666626 8.99996 0.666626C6.79914 0.666626 4.68807 1.53907 3.12935 3.09278C3.12279 3.09893 3.11404 3.10081 3.10763 3.10722C3.10122 3.11363 3.09944 3.12222 3.09334 3.12873C1.93189 4.29575 1.14217 5.78067 0.823851 7.39609C0.505534 9.01151 0.672885 10.685 1.30478 12.2054C1.93668 13.7258 3.00481 15.025 4.37435 15.9389C5.7439 16.8528 7.35348 17.3405 8.99996 17.3405C10.6464 17.3405 12.256 16.8528 13.6256 15.9389C14.9951 15.025 16.0632 13.7258 16.6951 12.2054C17.327 10.685 17.4944 9.01151 17.1761 7.39609C16.8578 5.78067 16.068 4.29575 14.9066 3.12873ZM8.99992 15.6666C8.00181 15.6663 7.01656 15.4414 6.11714 15.0087C5.21773 14.5759 4.42719 13.9464 3.80409 13.1666H7.15015C7.38188 13.4286 7.66662 13.6383 7.98551 13.782C8.3044 13.9257 8.65017 14 8.99992 14C9.34968 14 9.69544 13.9257 10.0143 13.782C10.3332 13.6383 10.618 13.4286 10.8497 13.1666H14.1958C13.5727 13.9464 12.7821 14.5759 11.8827 15.0087C10.9833 15.4414 9.99804 15.6663 8.99992 15.6666ZM8.16659 11.5C8.16659 11.3351 8.21546 11.174 8.30703 11.037C8.3986 10.8999 8.52875 10.7931 8.68102 10.7301C8.83329 10.667 9.00085 10.6505 9.1625 10.6826C9.32415 10.7148 9.47263 10.7942 9.58918 10.9107C9.70572 11.0272 9.78509 11.1757 9.81724 11.3374C9.8494 11.499 9.83289 11.6666 9.76982 11.8189C9.70675 11.9711 9.59994 12.1013 9.4629 12.1929C9.32586 12.2844 9.16474 12.3333 8.99992 12.3333C8.77898 12.3331 8.56714 12.2452 8.41091 12.089C8.25468 11.9327 8.16681 11.7209 8.16659 11.5ZM15.1751 11.5017L15.1665 11.5H11.4999C11.4983 10.9846 11.3373 10.4824 11.0389 10.0623C10.7405 9.64218 10.3193 9.32472 9.83325 9.15352V6.49996C9.83325 6.27894 9.74546 6.06698 9.58918 5.9107C9.4329 5.75442 9.22093 5.66663 8.99992 5.66663C8.77891 5.66663 8.56695 5.75442 8.41067 5.9107C8.25439 6.06698 8.16659 6.27894 8.16659 6.49996V9.15352C7.68054 9.32472 7.25939 9.64218 6.96098 10.0623C6.66256 10.4824 6.50151 10.9846 6.49992 11.5H2.83334L2.82474 11.5017C2.60799 10.9669 2.46221 10.406 2.39114 9.83329H3.16659C3.3876 9.83329 3.59956 9.74549 3.75584 9.58921C3.91212 9.43293 3.99992 9.22097 3.99992 8.99996C3.99992 8.77894 3.91212 8.56698 3.75584 8.4107C3.59956 8.25442 3.3876 8.16663 3.16659 8.16663H2.39114C2.54005 6.9821 3.00621 5.85981 3.74037 4.91838L4.28597 5.46399C4.36335 5.54137 4.4552 5.60274 4.5563 5.64462C4.65739 5.68649 4.76574 5.70804 4.87517 5.70804C4.98459 5.70804 5.09294 5.68649 5.19404 5.64461C5.29513 5.60274 5.38699 5.54136 5.46436 5.46399C5.54173 5.38661 5.60311 5.29476 5.64498 5.19366C5.68686 5.09257 5.70841 4.98422 5.70841 4.87479C5.70841 4.76537 5.68686 4.65702 5.64498 4.55592C5.60311 4.45483 5.54173 4.36297 5.46435 4.2856L4.91881 3.74005C5.86016 3.00613 6.98227 2.5401 8.16659 2.39118V3.16663C8.16659 3.38764 8.25439 3.5996 8.41067 3.75588C8.56695 3.91216 8.77891 3.99996 8.99992 3.99996C9.22093 3.99996 9.4329 3.91216 9.58918 3.75588C9.74546 3.5996 9.83325 3.38764 9.83325 3.16663V2.39118C11.0176 2.5401 12.1397 3.00613 13.081 3.74005L12.5355 4.2856C12.3792 4.44186 12.2914 4.6538 12.2914 4.87479C12.2914 5.09578 12.3792 5.30772 12.5355 5.46399C12.6917 5.62025 12.9037 5.70804 13.1247 5.70804C13.3457 5.70804 13.5576 5.62026 13.7139 5.46399L14.2595 4.91838C14.9936 5.85981 15.4598 6.9821 15.6087 8.16663H14.8333C14.6122 8.16663 14.4003 8.25442 14.244 8.4107C14.0877 8.56698 13.9999 8.77894 13.9999 8.99996C13.9999 9.22097 14.0877 9.43293 14.244 9.58921C14.4003 9.74549 14.6122 9.83329 14.8333 9.83329H15.6087C15.5376 10.406 15.3919 10.9669 15.1751 11.5017Z"
                                                    fill="currentColor"></path>
                                            </svg>
                                        </span>
                                        <span>Dashboard</span>
                                    </>
                                )} />
                            </li>
                        </ul>
                        <h3 className="mb-2 text-xs uppercase text-gray-500 font-medium">Vault</h3>
                        <ul className="mb-8 text-sm font-medium">
                            {menuItems && menuItems.map((item) => (
                                <li key={item.key}>
                                    <NavLink to={item.link} className={({ isActive }) => isActive ? nav_link_style['active'] : nav_link_style['inactive']} children={({ isActive }) => (
                                        <>
                                            <span className="inline-block mr-3">
                                                <svg className={isActive ? svg_link_style['active'] : svg_link_style['inactive']} viewBox={item.viewBox} fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    {item.path}
                                                </svg>
                                            </span>
                                            <span className="capitalize">{item.name}</span>
                                        </>
                                    )} />
                                </li>
                            ))}
                        </ul>
                        <h3 className="mb-2 text-xs uppercase text-gray-500 font-medium">Settings</h3>
                        <ul className="mb-8 text-sm font-medium">
                            <li>
                                <button onClick={() => setTheme(colorTheme === 'dark' ? 'light' : 'dark')} className="flex items-center w-full pl-3 py-3 pr-4 text-gray-500 dark:text-gray-50 hover:bg-indigo-50 dark:hover:bg-gray-900 rounded">
                                    <span className="inline-block mr-4">
                                        {colorTheme === 'dark' ? (
                                            <svg className="text-gray-200 dark:text-gray-600 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
                                        ) : (
                                            <svg className="text-gray-200 dark:text-gray-600 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path></svg>
                                        )}
                                    </span>
                                    <span>{colorTheme === 'dark' ? 'Light' : 'Dark'} Mode</span>
                                </button>
                            </li>
                            <li>
                                <button onClick={(e) => handleClick(e)} className="flex items-center w-full pl-3 py-3 pr-4 text-gray-500 dark:text-gray-50 hover:bg-indigo-50 dark:hover:bg-gray-900 rounded">
                                    <span className="inline-block mr-4">
                                        <svg className="text-gray-200 dark:text-gray-600 w-5 h-5" viewBox="0 0 14 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M0.333618 8.99996C0.333618 9.22097 0.421416 9.43293 0.577696 9.58922C0.733976 9.7455 0.945938 9.83329 1.16695 9.83329H7.49195L5.57528 11.7416C5.49718 11.8191 5.43518 11.9113 5.39287 12.0128C5.35057 12.1144 5.32879 12.2233 5.32879 12.3333C5.32879 12.4433 5.35057 12.5522 5.39287 12.6538C5.43518 12.7553 5.49718 12.8475 5.57528 12.925C5.65275 13.0031 5.74492 13.0651 5.84647 13.1074C5.94802 13.1497 6.05694 13.1715 6.16695 13.1715C6.27696 13.1715 6.38588 13.1497 6.48743 13.1074C6.58898 13.0651 6.68115 13.0031 6.75862 12.925L10.0919 9.59163C10.1678 9.51237 10.2273 9.41892 10.2669 9.31663C10.3503 9.11374 10.3503 8.88618 10.2669 8.68329C10.2273 8.581 10.1678 8.48755 10.0919 8.40829L6.75862 5.07496C6.68092 4.99726 6.58868 4.93563 6.48716 4.89358C6.38564 4.85153 6.27683 4.82988 6.16695 4.82988C6.05707 4.82988 5.94826 4.85153 5.84674 4.89358C5.74522 4.93563 5.65298 4.99726 5.57528 5.07496C5.49759 5.15266 5.43595 5.2449 5.3939 5.34642C5.35185 5.44794 5.33021 5.55674 5.33021 5.66663C5.33021 5.77651 5.35185 5.88532 5.3939 5.98683C5.43595 6.08835 5.49759 6.18059 5.57528 6.25829L7.49195 8.16663H1.16695C0.945938 8.16663 0.733976 8.25442 0.577696 8.4107C0.421416 8.56698 0.333618 8.77895 0.333618 8.99996ZM11.1669 0.666626H2.83362C2.17058 0.666626 1.53469 0.930018 1.06585 1.39886C0.59701 1.8677 0.333618 2.50358 0.333618 3.16663V5.66663C0.333618 5.88764 0.421416 6.0996 0.577696 6.25588C0.733976 6.41216 0.945938 6.49996 1.16695 6.49996C1.38797 6.49996 1.59993 6.41216 1.75621 6.25588C1.91249 6.0996 2.00028 5.88764 2.00028 5.66663V3.16663C2.00028 2.94561 2.08808 2.73365 2.24436 2.57737C2.40064 2.42109 2.6126 2.33329 2.83362 2.33329H11.1669C11.388 2.33329 11.5999 2.42109 11.7562 2.57737C11.9125 2.73365 12.0003 2.94561 12.0003 3.16663V14.8333C12.0003 15.0543 11.9125 15.2663 11.7562 15.4225C11.5999 15.5788 11.388 15.6666 11.1669 15.6666H2.83362C2.6126 15.6666 2.40064 15.5788 2.24436 15.4225C2.08808 15.2663 2.00028 15.0543 2.00028 14.8333V12.3333C2.00028 12.1123 1.91249 11.9003 1.75621 11.744C1.59993 11.5878 1.38797 11.5 1.16695 11.5C0.945938 11.5 0.733976 11.5878 0.577696 11.744C0.421416 11.9003 0.333618 12.1123 0.333618 12.3333V14.8333C0.333618 15.4963 0.59701 16.1322 1.06585 16.6011C1.53469 17.0699 2.17058 17.3333 2.83362 17.3333H11.1669C11.83 17.3333 12.4659 17.0699 12.9347 16.6011C13.4036 16.1322 13.6669 15.4963 13.6669 14.8333V3.16663C13.6669 2.50358 13.4036 1.8677 12.9347 1.39886C12.4659 0.930018 11.83 0.666626 11.1669 0.666626Z" fill="currentColor"></path>
                                        </svg>
                                    </span>
                                    <span>Logout</span>
                                </button>
                            </li>
                        </ul>
                    </div>
                </nav>
            </div >
        </div >
    )
}

export default Navbar