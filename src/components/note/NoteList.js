import axios from "axios";
import { useEffect, useContext, useState } from "react";
import { ThemeContext } from '../../context/ThemeContext';

import formatDistanceToNow from 'date-fns/formatDistanceToNow'

const NoteList = ({ user, data, listMenu, setData, setEditNote, toggleListMenu }) => {
    const { colorTheme } = useContext(ThemeContext);
    const [noteList, setNoteList] = useState(null)

    useEffect(() => {
        const fetchData = async () => {
            try {
                const res = await axios.get(`${process.env.REACT_APP_API}/notes/${user._id}`)
                setNoteList(res.data);
            } catch (err) {
                console.log(err)
            }
        }

        fetchData()
    }, [data, user._id])

    const handleClick = (item) => {
        setEditNote(item)
    };

    const handleDelete = async (item) => {
        await axios.delete(`${process.env.REACT_APP_API}/notes/${item._id}/${user._id}`)
        setData(null)
        setEditNote(null)
    }

    return (
        <div className={`${(listMenu === 'hidden' ? 'hidden' : '')} lg:block relative z-50`}>
            <nav className={`fixed top-0 right-0 bottom-0 flex flex-col w-3/4 lg:w-96 sm:max-w-md pt-6 pb-8 bg-white dark:bg-gray-800 border-l dark:border-gray-700 overflow-y-auto ${(listMenu === 'hidden' ? 'hidden' : '')}`}>
                <div className="px-4 pb-4">
                    {noteList && noteList.map((item) => (
                        <div className="flex justify-between items-center mb-4 p-4 bg-gray-50 dark:bg-gray-900 shadow-md rounded hover:cursor-pointer" key={item._id}>
                            <div className="flex flex-col w-full" onClick={() => handleClick(item)}>
                                <h4 className="text-sm dark:text-white font-medium">{item.title}</h4>
                                <h4 className="text-sm dark:text-white font-normal flex items-center">
                                    <svg className="mr-1" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path fill="#67798E" d="M7.00017 0.333344C5.68162 0.333344 4.39269 0.724337 3.29636 1.45688C2.20004 2.18942 1.34555 3.23061 0.840969 4.44879C0.336385 5.66696 0.204362 7.00741 0.461597 8.30061C0.718832 9.59382 1.35377 10.7817 2.28612 11.7141C3.21847 12.6464 4.40636 13.2813 5.69956 13.5386C6.99277 13.7958 8.33321 13.6638 9.55139 13.1592C10.7696 12.6546 11.8108 11.8001 12.5433 10.7038C13.2758 9.60748 13.6668 8.31855 13.6668 7.00001C13.6649 5.2325 12.9619 3.53795 11.712 2.28814C10.4622 1.03832 8.76767 0.335309 7.00017 0.333344ZM7.00017 12.3333C5.94533 12.3333 4.91419 12.0205 4.03712 11.4345C3.16006 10.8485 2.47648 10.0155 2.07281 9.04099C1.66914 8.06645 1.56352 6.99409 1.76931 5.95953C1.9751 4.92496 2.48305 3.97465 3.22893 3.22877C3.97481 2.48289 4.92512 1.97494 5.95968 1.76916C6.99425 1.56337 8.0666 1.66899 9.04114 2.07265C10.0157 2.47632 10.8486 3.15991 11.4347 4.03697C12.0207 4.91403 12.3335 5.94518 12.3335 7.00001C12.3319 8.414 11.7695 9.76962 10.7696 10.7695C9.76977 11.7693 8.41416 12.3317 7.00017 12.3333ZM8.39892 5.42254L7.66683 5.84539V3.66668C7.66683 3.48987 7.59659 3.3203 7.47157 3.19527C7.34655 3.07025 7.17698 3.00001 7.00017 3.00001C6.82335 3.00001 6.65379 3.07025 6.52876 3.19527C6.40374 3.3203 6.3335 3.48987 6.3335 3.66668V7.00001C6.33353 7.11703 6.36435 7.23197 6.42286 7.33331C6.48138 7.43464 6.56553 7.51879 6.66686 7.57731C6.76819 7.63583 6.88314 7.66665 7.00016 7.66668C7.11717 7.66671 7.23214 7.63595 7.3335 7.57748L9.06559 6.57748C9.14147 6.53373 9.20799 6.47546 9.26135 6.406C9.3147 6.33653 9.35385 6.25724 9.37655 6.17264C9.39925 6.08804 9.40506 5.9998 9.39364 5.91295C9.38223 5.82611 9.35382 5.74237 9.31003 5.66651C9.26624 5.59065 9.20793 5.52416 9.13844 5.47084C9.06895 5.41752 8.98963 5.37841 8.90502 5.35576C8.82041 5.3331 8.73217 5.32734 8.64533 5.3388C8.55849 5.35025 8.47476 5.37871 8.39892 5.42254Z"></path>
                                    </svg>
                                    {formatDistanceToNow(new Date(item.updatedAt), { addSuffix: true })}
                                </h4>
                            </div>
                            <div className="flex self-end">
                                <button className="p-2 dark:bg-red-600 rounded" onClick={() => handleDelete(item)}>
                                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        {(colorTheme === 'dark') ? (
                                            <path
                                                d="M8.33333 15C8.55435 15 8.76631 14.9122 8.92259 14.7559C9.07887 14.5996 9.16667 14.3877 9.16667 14.1667V9.16666C9.16667 8.94564 9.07887 8.73368 8.92259 8.5774C8.76631 8.42112 8.55435 8.33332 8.33333 8.33332C8.11232 8.33332 7.90036 8.42112 7.74408 8.5774C7.5878 8.73368 7.5 8.94564 7.5 9.16666V14.1667C7.5 14.3877 7.5878 14.5996 7.74408 14.7559C7.90036 14.9122 8.11232 15 8.33333 15ZM16.6667 4.99999H13.3333V4.16666C13.3333 3.50362 13.0699 2.86773 12.6011 2.39889C12.1323 1.93005 11.4964 1.66666 10.8333 1.66666H9.16667C8.50363 1.66666 7.86774 1.93005 7.3989 2.39889C6.93006 2.86773 6.66667 3.50362 6.66667 4.16666V4.99999H3.33333C3.11232 4.99999 2.90036 5.08779 2.74408 5.24407C2.5878 5.40035 2.5 5.61231 2.5 5.83332C2.5 6.05434 2.5878 6.2663 2.74408 6.42258C2.90036 6.57886 3.11232 6.66666 3.33333 6.66666H4.16667V15.8333C4.16667 16.4964 4.43006 17.1322 4.8989 17.6011C5.36774 18.0699 6.00363 18.3333 6.66667 18.3333H13.3333C13.9964 18.3333 14.6323 18.0699 15.1011 17.6011C15.5699 17.1322 15.8333 16.4964 15.8333 15.8333V6.66666H16.6667C16.8877 6.66666 17.0996 6.57886 17.2559 6.42258C17.4122 6.2663 17.5 6.05434 17.5 5.83332C17.5 5.61231 17.4122 5.40035 17.2559 5.24407C17.0996 5.08779 16.8877 4.99999 16.6667 4.99999ZM8.33333 4.16666C8.33333 3.94564 8.42113 3.73368 8.57741 3.5774C8.73369 3.42112 8.94565 3.33332 9.16667 3.33332H10.8333C11.0543 3.33332 11.2663 3.42112 11.4226 3.5774C11.5789 3.73368 11.6667 3.94564 11.6667 4.16666V4.99999H8.33333V4.16666ZM14.1667 15.8333C14.1667 16.0543 14.0789 16.2663 13.9226 16.4226C13.7663 16.5789 13.5543 16.6667 13.3333 16.6667H6.66667C6.44565 16.6667 6.23369 16.5789 6.07741 16.4226C5.92113 16.2663 5.83333 16.0543 5.83333 15.8333V6.66666H14.1667V15.8333ZM11.6667 15C11.8877 15 12.0996 14.9122 12.2559 14.7559C12.4122 14.5996 12.5 14.3877 12.5 14.1667V9.16666C12.5 8.94564 12.4122 8.73368 12.2559 8.5774C12.0996 8.42112 11.8877 8.33332 11.6667 8.33332C11.4457 8.33332 11.2337 8.42112 11.0774 8.5774C10.9211 8.73368 10.8333 8.94564 10.8333 9.16666V14.1667C10.8333 14.3877 10.9211 14.5996 11.0774 14.7559C11.2337 14.9122 11.4457 15 11.6667 15Z"
                                                fill="#fff"></path>
                                        ) : (
                                            <path
                                                d="M8.33333 15C8.55435 15 8.76631 14.9122 8.92259 14.7559C9.07887 14.5996 9.16667 14.3877 9.16667 14.1667V9.16666C9.16667 8.94564 9.07887 8.73368 8.92259 8.5774C8.76631 8.42112 8.55435 8.33332 8.33333 8.33332C8.11232 8.33332 7.90036 8.42112 7.74408 8.5774C7.5878 8.73368 7.5 8.94564 7.5 9.16666V14.1667C7.5 14.3877 7.5878 14.5996 7.74408 14.7559C7.90036 14.9122 8.11232 15 8.33333 15ZM16.6667 4.99999H13.3333V4.16666C13.3333 3.50362 13.0699 2.86773 12.6011 2.39889C12.1323 1.93005 11.4964 1.66666 10.8333 1.66666H9.16667C8.50363 1.66666 7.86774 1.93005 7.3989 2.39889C6.93006 2.86773 6.66667 3.50362 6.66667 4.16666V4.99999H3.33333C3.11232 4.99999 2.90036 5.08779 2.74408 5.24407C2.5878 5.40035 2.5 5.61231 2.5 5.83332C2.5 6.05434 2.5878 6.2663 2.74408 6.42258C2.90036 6.57886 3.11232 6.66666 3.33333 6.66666H4.16667V15.8333C4.16667 16.4964 4.43006 17.1322 4.8989 17.6011C5.36774 18.0699 6.00363 18.3333 6.66667 18.3333H13.3333C13.9964 18.3333 14.6323 18.0699 15.1011 17.6011C15.5699 17.1322 15.8333 16.4964 15.8333 15.8333V6.66666H16.6667C16.8877 6.66666 17.0996 6.57886 17.2559 6.42258C17.4122 6.2663 17.5 6.05434 17.5 5.83332C17.5 5.61231 17.4122 5.40035 17.2559 5.24407C17.0996 5.08779 16.8877 4.99999 16.6667 4.99999ZM8.33333 4.16666C8.33333 3.94564 8.42113 3.73368 8.57741 3.5774C8.73369 3.42112 8.94565 3.33332 9.16667 3.33332H10.8333C11.0543 3.33332 11.2663 3.42112 11.4226 3.5774C11.5789 3.73368 11.6667 3.94564 11.6667 4.16666V4.99999H8.33333V4.16666ZM14.1667 15.8333C14.1667 16.0543 14.0789 16.2663 13.9226 16.4226C13.7663 16.5789 13.5543 16.6667 13.3333 16.6667H6.66667C6.44565 16.6667 6.23369 16.5789 6.07741 16.4226C5.92113 16.2663 5.83333 16.0543 5.83333 15.8333V6.66666H14.1667V15.8333ZM11.6667 15C11.8877 15 12.0996 14.9122 12.2559 14.7559C12.4122 14.5996 12.5 14.3877 12.5 14.1667V9.16666C12.5 8.94564 12.4122 8.73368 12.2559 8.5774C12.0996 8.42112 11.8877 8.33332 11.6667 8.33332C11.4457 8.33332 11.2337 8.42112 11.0774 8.5774C10.9211 8.73368 10.8333 8.94564 10.8333 9.16666V14.1667C10.8333 14.3877 10.9211 14.5996 11.0774 14.7559C11.2337 14.9122 11.4457 15 11.6667 15Z"
                                                fill="#E85444"></path>
                                        )}
                                    </svg>
                                </button>
                            </div>
                        </div>
                    ))}

                </div>
                <div className="px-4">
                    <button onClick={toggleListMenu}
                        className="inline-block w-full px-3 py-3 font-medium text-white bg-indigo-500 hover:bg-indigo-600 rounded transition duration-200"
                        type="submit">Close</button>
                </div>

            </nav>
        </div>
    )
}

export default NoteList