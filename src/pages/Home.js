import axios from "axios";
import { useContext, useEffect, useState } from "react";
import { AuthContext } from "../context/AuthContext";

import Navbar from "../components/Navbar";
import Banner from "../components/home/Banner";
import StatList from "../components/home/StatList";

const Home = () => {
    const { user } = useContext(AuthContext);
    const [vaults, setVaults] = useState([
        {
            key: 'stat1', name: 'apps', count: 0, viewBox: '0 0 18 18', 
            path: 'M7.33335 9.83329H1.50002C1.27901 9.83329 1.06704 9.92109 0.910765 10.0774C0.754484 10.2337 0.666687 10.4456 0.666687 10.6666V16.5C0.666687 16.721 0.754484 16.9329 0.910765 17.0892C1.06704 17.2455 1.27901 17.3333 1.50002 17.3333H7.33335C7.55437 17.3333 7.76633 17.2455 7.92261 17.0892C8.07889 16.9329 8.16669 16.721 8.16669 16.5V10.6666C8.16669 10.4456 8.07889 10.2337 7.92261 10.0774C7.76633 9.92109 7.55437 9.83329 7.33335 9.83329ZM6.50002 15.6666H2.33335V11.5H6.50002V15.6666ZM16.5 0.666626H10.6667C10.4457 0.666626 10.2337 0.754423 10.0774 0.910704C9.92115 1.06698 9.83335 1.27895 9.83335 1.49996V7.33329C9.83335 7.55431 9.92115 7.76627 10.0774 7.92255C10.2337 8.07883 10.4457 8.16663 10.6667 8.16663H16.5C16.721 8.16663 16.933 8.07883 17.0893 7.92255C17.2456 7.76627 17.3334 7.55431 17.3334 7.33329V1.49996C17.3334 1.27895 17.2456 1.06698 17.0893 0.910704C16.933 0.754423 16.721 0.666626 16.5 0.666626ZM15.6667 6.49996H11.5V2.33329H15.6667V6.49996ZM16.5 9.83329H10.6667C10.4457 9.83329 10.2337 9.92109 10.0774 10.0774C9.92115 10.2337 9.83335 10.4456 9.83335 10.6666V16.5C9.83335 16.721 9.92115 16.9329 10.0774 17.0892C10.2337 17.2455 10.4457 17.3333 10.6667 17.3333H16.5C16.721 17.3333 16.933 17.2455 17.0893 17.0892C17.2456 16.9329 17.3334 16.721 17.3334 16.5V10.6666C17.3334 10.4456 17.2456 10.2337 17.0893 10.0774C16.933 9.92109 16.721 9.83329 16.5 9.83329ZM15.6667 15.6666H11.5V11.5H15.6667V15.6666ZM7.33335 0.666626H1.50002C1.27901 0.666626 1.06704 0.754423 0.910765 0.910704C0.754484 1.06698 0.666687 1.27895 0.666687 1.49996V7.33329C0.666687 7.55431 0.754484 7.76627 0.910765 7.92255C1.06704 8.07883 1.27901 8.16663 1.50002 8.16663H7.33335C7.55437 8.16663 7.76633 8.07883 7.92261 7.92255C8.07889 7.76627 8.16669 7.55431 8.16669 7.33329V1.49996C8.16669 1.27895 8.07889 1.06698 7.92261 0.910704C7.76633 0.754423 7.55437 0.666626 7.33335 0.666626ZM6.50002 6.49996H2.33335V2.33329H6.50002V6.49996Z',
        },
        {
            key: 'stat2', name: 'notes', count: 0, viewBox: '0 0 14 18', 
            path: 'M13.6665 6.44996C13.6578 6.3734 13.6411 6.29799 13.6165 6.22496V6.14996C13.5765 6.06428 13.523 5.98551 13.4582 5.91663L8.45819 0.916626C8.3893 0.851806 8.31054 0.79836 8.22486 0.758293H8.14986C8.0652 0.709744 7.97171 0.678579 7.87486 0.666626H2.83319C2.17015 0.666626 1.53426 0.930018 1.06542 1.39886C0.596583 1.8677 0.333191 2.50358 0.333191 3.16663V14.8333C0.333191 15.4963 0.596583 16.1322 1.06542 16.6011C1.53426 17.0699 2.17015 17.3333 2.83319 17.3333H11.1665C11.8296 17.3333 12.4654 17.0699 12.9343 16.6011C13.4031 16.1322 13.6665 15.4963 13.6665 14.8333V6.49996C13.6665 6.49996 13.6665 6.49996 13.6665 6.44996ZM8.66652 3.50829L10.8249 5.66663H9.49986C9.27884 5.66663 9.06688 5.57883 8.9106 5.42255C8.75432 5.26627 8.66652 5.05431 8.66652 4.83329V3.50829ZM11.9999 14.8333C11.9999 15.0543 11.9121 15.2663 11.7558 15.4225C11.5995 15.5788 11.3875 15.6666 11.1665 15.6666H2.83319C2.61218 15.6666 2.40022 15.5788 2.24394 15.4225C2.08765 15.2663 1.99986 15.0543 1.99986 14.8333V3.16663C1.99986 2.94561 2.08765 2.73365 2.24394 2.57737C2.40022 2.42109 2.61218 2.33329 2.83319 2.33329H6.99986V4.83329C6.99986 5.49633 7.26325 6.13222 7.73209 6.60106C8.20093 7.0699 8.83681 7.33329 9.49986 7.33329H11.9999V14.8333Z',
        },
        {
            key: 'stat3', name: 'websites', count: 0, viewBox: '0 0 18 18', 
            path: 'M9.00014 0.666626C4.41681 0.666626 0.666809 4.41663 0.666809 8.99996C0.666809 13.5833 4.41681 17.3333 9.00014 17.3333C13.5835 17.3333 17.3335 13.5833 17.3335 8.99996C17.3335 4.41663 13.5835 0.666626 9.00014 0.666626ZM2.58348 10.6666C2.41681 10.0833 2.33348 9.58329 2.33348 8.99996C2.33348 8.41663 2.41681 7.91663 2.58348 7.33329H4.16681C4.00014 8.41663 4.00014 9.58329 4.16681 10.6666H2.58348ZM3.25014 12.3333H4.41681C4.58348 13.0833 4.83348 13.8333 5.25014 14.5C4.41681 13.9166 3.75014 13.1666 3.25014 12.3333ZM4.41681 5.66663H3.25014C3.75014 4.83329 4.41681 4.08329 5.25014 3.49996C4.83348 4.16663 4.58348 4.91663 4.41681 5.66663ZM8.16681 15.4166C7.16681 14.6666 6.41681 13.5833 6.16681 12.3333H8.16681V15.4166ZM8.16681 10.6666H5.75014C5.66681 10.0833 5.66681 9.58329 5.66681 8.99996C5.66681 8.41663 5.66681 7.91663 5.75014 7.33329H8.16681V10.6666ZM8.16681 5.66663H6.16681C6.41681 4.41663 7.16681 3.33329 8.16681 2.58329V5.66663ZM14.7501 5.66663H13.5835C13.4168 4.91663 13.1668 4.16663 12.7501 3.49996C13.5835 4.08329 14.2501 4.83329 14.7501 5.66663ZM9.83348 2.58329C10.8335 3.33329 11.5835 4.41663 11.8335 5.66663H9.83348V2.58329ZM9.83348 15.4166V12.3333H11.8335C11.5835 13.5833 10.8335 14.6666 9.83348 15.4166ZM12.2501 10.6666H9.83348V7.33329H12.2501C12.3335 8.41663 12.3335 9.58329 12.2501 10.6666ZM12.8335 14.5C13.1668 13.8333 13.4168 13.0833 13.6668 12.3333H14.8335C14.2501 13.1666 13.5835 13.9166 12.8335 14.5ZM13.9168 10.6666C14.0835 9.58329 14.0835 8.41663 13.9168 7.33329H15.5001C15.8335 8.41663 15.8335 9.58329 15.5001 10.6666H13.9168Z'
        },
        {
            key: 'stat4', name: 'development', count: 0, viewBox: '0 0 18 18', 
            path: 'M16.7666 6.9583L15.1916 6.4333L15.9332 4.94996C16.0084 4.7947 16.0336 4.61993 16.0052 4.44977C15.9768 4.27961 15.8964 4.12245 15.7749 3.99996L13.9999 2.22496C13.8768 2.1017 13.7181 2.02013 13.5462 1.99173C13.3743 1.96333 13.1978 1.98953 13.0416 2.06663L11.5582 2.8083L11.0332 1.2333C10.9778 1.06912 10.8725 0.926317 10.7321 0.824752C10.5917 0.723187 10.4232 0.667916 10.2499 0.666629H7.7499C7.5752 0.666178 7.40477 0.720645 7.26271 0.82233C7.12065 0.924016 7.01414 1.06778 6.95823 1.2333L6.43323 2.8083L4.9499 2.06663C4.79464 1.99145 4.61987 1.9663 4.44971 1.99466C4.27955 2.02302 4.12239 2.10349 3.9999 2.22496L2.2249 3.99996C2.10164 4.1231 2.02007 4.28177 1.99167 4.45368C1.96327 4.62558 1.98946 4.80205 2.06657 4.9583L2.80823 6.44163L1.23323 6.96663C1.06906 7.02208 0.926256 7.12732 0.824691 7.26772C0.723126 7.40812 0.667855 7.57668 0.666568 7.74996V10.25C0.666117 10.4247 0.720584 10.5951 0.822269 10.7372C0.923955 10.8792 1.06772 10.9857 1.23323 11.0416L2.80823 11.5666L2.06657 13.05C1.99138 13.2052 1.96624 13.38 1.9946 13.5502C2.02296 13.7203 2.10343 13.8775 2.2249 14L3.9999 15.775C4.12304 15.8982 4.28171 15.9798 4.45361 16.0082C4.62551 16.0366 4.80199 16.0104 4.95823 15.9333L6.44157 15.1916L6.96657 16.7666C7.02247 16.9321 7.12898 17.0759 7.27104 17.1776C7.41311 17.2793 7.58353 17.3337 7.75823 17.3333H10.2582C10.4329 17.3337 10.6034 17.2793 10.7454 17.1776C10.8875 17.0759 10.994 16.9321 11.0499 16.7666L11.5749 15.1916L13.0582 15.9333C13.2125 16.0066 13.3856 16.0307 13.554 16.0024C13.7224 15.9741 13.8781 15.8947 13.9999 15.775L15.7749 14C15.8982 13.8768 15.9797 13.7182 16.0081 13.5463C16.0365 13.3743 16.0103 13.1979 15.9332 13.0416L15.1916 11.5583L16.7666 11.0333C16.9307 10.9778 17.0735 10.8726 17.1751 10.7322C17.2767 10.5918 17.3319 10.4232 17.3332 10.25V7.74996C17.3337 7.57526 17.2792 7.40483 17.1775 7.26277C17.0758 7.12071 16.9321 7.0142 16.7666 6.9583ZM15.6666 9.64996L14.6666 9.9833C14.4366 10.0579 14.2256 10.1816 14.0483 10.3459C13.8709 10.5102 13.7314 10.711 13.6395 10.9346C13.5475 11.1582 13.5053 11.3991 13.5157 11.6406C13.5261 11.8821 13.589 12.1185 13.6999 12.3333L14.1749 13.2833L13.2582 14.2L12.3332 13.7C12.1195 13.5935 11.8854 13.5342 11.6468 13.526C11.4082 13.5179 11.1706 13.5611 10.9502 13.6528C10.7297 13.7445 10.5315 13.8824 10.369 14.0573C10.2065 14.2322 10.0835 14.44 10.0082 14.6666L9.6749 15.6666H8.3499L8.01657 14.6666C7.94198 14.4367 7.81826 14.2257 7.65398 14.0483C7.48971 13.871 7.28882 13.7315 7.06525 13.6395C6.84168 13.5475 6.60078 13.5053 6.35925 13.5158C6.11773 13.5262 5.88137 13.5891 5.66657 13.7L4.71657 14.175L3.7999 13.2583L4.2999 12.3333C4.41081 12.1185 4.47367 11.8821 4.48411 11.6406C4.49454 11.3991 4.45232 11.1582 4.36035 10.9346C4.26838 10.711 4.12888 10.5102 3.95152 10.3459C3.77416 10.1816 3.56319 10.0579 3.33323 9.9833L2.33323 9.64996V8.34996L3.33323 8.01663C3.56319 7.94204 3.77416 7.81832 3.95152 7.65404C4.12888 7.48977 4.26838 7.28888 4.36035 7.06531C4.45232 6.84174 4.49454 6.60084 4.48411 6.35932C4.47367 6.11779 4.41081 5.88143 4.2999 5.66663L3.8249 4.74163L4.74157 3.82496L5.66657 4.29996C5.88137 4.41087 6.11773 4.47373 6.35925 4.48417C6.60078 4.49461 6.84168 4.45238 7.06525 4.36041C7.28882 4.26845 7.48971 4.12894 7.65398 3.95158C7.81826 3.77422 7.94198 3.56325 8.01657 3.3333L8.3499 2.3333H9.6499L9.98323 3.3333C10.0578 3.56325 10.1815 3.77422 10.3458 3.95158C10.5101 4.12894 10.711 4.26845 10.9346 4.36041C11.1581 4.45238 11.399 4.49461 11.6405 4.48417C11.8821 4.47373 12.1184 4.41087 12.3332 4.29996L13.2832 3.82496L14.1999 4.74163L13.6999 5.66663C13.5934 5.88033 13.5341 6.11442 13.526 6.35304C13.5178 6.59165 13.5611 6.82924 13.6527 7.0497C13.7444 7.27016 13.8823 7.46835 14.0573 7.63086C14.2322 7.79337 14.44 7.9164 14.6666 7.99163L15.6666 8.32496V9.64996ZM8.9999 5.66663C8.34063 5.66663 7.69616 5.86213 7.148 6.2284C6.59984 6.59467 6.17259 7.11526 5.9203 7.72435C5.66801 8.33344 5.602 9.00366 5.73062 9.65026C5.85923 10.2969 6.1767 10.8908 6.64288 11.357C7.10905 11.8232 7.703 12.1406 8.3496 12.2692C8.9962 12.3979 9.66643 12.3319 10.2755 12.0796C10.8846 11.8273 11.4052 11.4 11.7715 10.8519C12.1377 10.3037 12.3332 9.65923 12.3332 8.99996C12.3332 8.11591 11.982 7.26806 11.3569 6.64294C10.7318 6.01782 9.88396 5.66663 8.9999 5.66663ZM8.9999 10.6666C8.67027 10.6666 8.34803 10.5689 8.07395 10.3857C7.79987 10.2026 7.58625 9.94231 7.4601 9.63777C7.33396 9.33322 7.30095 8.99811 7.36526 8.67481C7.42957 8.35151 7.5883 8.05454 7.82139 7.82145C8.05448 7.58836 8.35145 7.42963 8.67475 7.36532C8.99805 7.30101 9.33316 7.33402 9.63771 7.46016C9.94225 7.58631 10.2025 7.79993 10.3857 8.07401C10.5688 8.34809 10.6666 8.67033 10.6666 8.99996C10.6666 9.44199 10.491 9.86591 10.1784 10.1785C9.86585 10.491 9.44193 10.6666 8.9999 10.6666Z',
        },
    ])

    useEffect(() => {
        const fetchData = async () => {
            try {
                const res = await axios.get(`${process.env.REACT_APP_API}/counts/${user._id}`)
                setVaults((prev) => {
                    for(let i = 0; i < prev.length; i++) {
                        prev[i].count = res.data[i].count
                    }
                    return [...prev]
                })
            } catch (err) {
                console.log(err)
            }
        }

        fetchData()
    }, [user._id])

    return (
        <>
            <Navbar />
            <div className="mx-auto lg:ml-60">
                <Banner />
                <StatList vaults={vaults} />
            </div>
        </>
    )
}

export default Home